{"version":3,"sources":["Filter.js","Message.js","PersonForm.js","Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","Message","message","className","PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","type","Persons","personsToShow","deletePerson","map","person","name","number","onClick","id","baseUrl","exportObject","getAll","axios","get","then","response","data","create","newObject","post","update","put","del","delete","App","useState","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","persons","setPersons","setMessage","useEffect","personServices","initialPersons","filter","toLowerCase","includes","event","target","preventDefault","latestID","length","personObject","object","list","returnValue","i","check","lengthOneIfFound","indexValue","push","findObjectID","window","confirm","personID","array","message2","setTimeout","catch","error","console","log","returnedPerson","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaffb7de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ newFilter, handleFilterChange}) => {\r\n  return (\r\n    <div> filter shown with: <input value={newFilter} onChange={handleFilterChange}/></div>\r\n  )\r\n}\r\nexport default Filter;","import React from 'react';\r\nimport './styles/message.css';\r\n\r\nconst Message = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    \r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handlePersonChange, newNumber, handleNumberChange }) => {\r\n  return (\r\n    <div>\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handlePersonChange}/>\r\n        </div>\r\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default PersonForm;","import React from 'react'\r\n\r\nconst Persons = ({personsToShow,deletePerson}) => {\r\n  return (\r\n    <div>  \r\n    <ul>\r\n    {personsToShow.map(person =>\r\n    <div  key={person.id}> \r\n        <li>{person.name} {person.number} <button onClick={() => {deletePerson(person.id, person.name)}}>delete</button></li>\r\n        </div>\r\n      )}\r\n  </ul>\r\n  </div>\r\n  )\r\n}\r\nexport default Persons;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {    \r\n        return response.data  \r\n    })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\n\r\nlet exportObject = { getAll, create, update, del }\r\n\r\nexport default exportObject;","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport Message from './Message';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\n//import axios from 'axios'\nimport personServices from './services/persons'\n\nconst App = () => {\n\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ newFilter, setNewFilter ] = useState('');\n  const [ showAll, setShowAll] = useState(true);\n  const [ persons, setPersons] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    //console.log('effect')\n    personServices\n      .getAll()\n      .then(initialPersons => {        \n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n  \n\n  const handlePersonChange = (event) => {    \n    //console.log(event.target.value)    \n    setNewName(event.target.value);  \n  }\n\n  const handleNumberChange = (event) => {    \n    //console.log(event.target.value)    \n    setNewNumber(event.target.value);  \n  }\n\n  const handleFilterChange = (event) => {    \n    //console.log(event.target.value)    \n    setNewFilter(event.target.value);\n    //console.log(newFilter)\n    setShowAll();\n  }\n\n  function check(object, list) {\n    //console.log(\"function check\")\n    let returnValue = 0;\n    let i =0;\n      while (returnValue !== true && i < list.length) {\n        returnValue = list[i].name === object.name;\n        i++;\n      }\n    return returnValue;\n  }\n\n  function findObjectID(object, list) {\n    let indexValue = [];\n    let booleanValue = 0;\n    //console.log(\"findObject function\")\n    for (let i = 0; i < list.length; i++) {\n      booleanValue = list[i].name === object.name;\n      //console.log(i)\n      if (booleanValue === true) {\n        //console.log(\"index\",i);\n        indexValue.push(i);\n        return indexValue;\n      } else { }\n    }\n    return indexValue;\n  }\n\n  function functionForId() {\n    personServices\n      .getAll()\n      .then(persons => {        \n        //console.log(persons, \"length:\", persons.length)\n        if (persons.length<0) { \n          let returnLastPersonId = persons[persons.length-1].id;\n          return returnLastPersonId\n      } else if (persons.length === 0) {\n          return 0;\n      }\n      })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    //Lisäsin tämän, koska ilman sitä kaatui jos poisti tiedon ja yritti lisätä uuden\n    let latestID = functionForId();\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: latestID + 1\n    }\n\n    let isAlreadyInList = 0;\n    isAlreadyInList = check(personObject, persons);\n    //console.log(\"is in list?;\",isAlreadyInList)\n\n      if (isAlreadyInList === true) {\n        let lengthOneIfFound = findObjectID(personObject,persons);\n\n        let message = `${personObject.name} is already added to phonebook, replace the old number with a new one?`;\n        let result = window.confirm(message);\n      \n\n        if (result === true) {\n          //console.log(\"message answer:\",result)\n\n          if (lengthOneIfFound.length > 0) {\n\n\n            let personID = persons[lengthOneIfFound].id;\n            //console.log(\"personID\",personID)\n              personServices      \n                .update(personID, personObject)      \n                .then(response => {  \n                  //console.log(\"update response\", response)     \n                  let array = [...persons]\n                  array[lengthOneIfFound[0]] = response;\n                  //console.log(array)\n                  setPersons(array);   \n                  setNewName('') \n                  setNewNumber('')\n\n                  \n                  let message2 = `${personObject.name} number replaced`;\n                  setMessage(message2);\n                  setTimeout(() => {          \n                    setMessage(null);        \n                  }, 5000)\n                \n                }).catch(error => {\n                  console.log(\"error message:\",error)\n                  console.log(\"error\",personObject);\n                  setPersons(persons.filter(person => person.id !== personID));\n                  let message2 = `Information of ${personObject.name} has already been removed from server`;\n                  setMessage(message2);\n                  setTimeout(() => {          \n                    setMessage(null);        \n                  }, 5000)\n\n          \n                })\n                //alert(`${personObject.name} is already added to phonebook`);\n            } \n          }\n\n      } else {\n        //setPersons(persons.concat(personObject));\n        //console.log(persons);\n\n        let message2 = `${personObject.name} created`;\n        setMessage(message2);\n        setTimeout(() => {          \n          setMessage(null);        \n        }, 5000)\n\n        personServices      \n          .create(personObject)      \n          .then(returnedPerson => {        \n            setPersons(persons.concat(returnedPerson))       \n            setNewName('')     \n          })\n          .catch(error => {     \n            alert(        \n              `the person was already deleted from server`      \n              )      \n              setPersons(persons.filter(person => person.id !== personObject.id))    \n            })\n          setNewName('');\n          setNewNumber('');\n      }\n  }\n\n  const personsToShow = showAll\n      ? persons    \n      : persons.filter(person => {\n        let name = person.name.toLowerCase();\n        return name.includes(newFilter.toLowerCase());\n      })\n\n      function deletePerson (id,name) {\n       // console.log(\"name\", id)\n       let message = `Delete ${name}?`;\n       let result = window.confirm(message);\n       \n        if (result === true) { \n\n          let message2 = `${name} deleted`;\n          setMessage(message2);\n          setTimeout(() => {          \n            setMessage(null);        \n          }, 5000)\n        \n\n          personServices      \n            .del(id)      \n            .then(response => {        \n              setPersons(persons.filter(person => person.id !== id));       \n            }).catch(error => {\n              console.log(error);\n              setPersons(persons.filter(person => person.id !== id));\n            })\n        } else { }\n      }\n      \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message}/>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handlePersonChange={handlePersonChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}